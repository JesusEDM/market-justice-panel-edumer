---
title: "02-analisis"
format: html
editor: source
bibliography: "../input/bib/merit-redis-school.bib"
---

```{r}
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan, haven)
```

```{r}
load(here::here("input/data/proc/data.RData"))
```

# Correlaciones

```{r}
corr <- data %>% select(redistribucion, 
                        merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES, 
                        padres_ricos_percep_ES, buenos_contactos_percep_ES,
                        merit_esfuerzo_pref_ES, merit_talento_pref_ES, social_merit_pref_ES, 
                        padres_ricos_pref_ES, buenos_contactos_pref_ES,
                        school_esfuerzo_ES, school_talento_ES, school_merito_ES)
```

```{r}
M <- cor(corr, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Redistribución",
                 "B. Percepción: esfuerzo",
                 "C. Percepción: talento",
                 "D. Percepción: merecimiento",
                 "E. Percepción: padres ricos",
                 "F. Percepción: buenos contactos",
                 "G. Preferencia: esfuerzo",
                 "H. Preferencia: talento",
                 "I. Preferencia: merecimiento",
                 "J. Preferencia: padres ricos",
                 "K. Preferencia: buenos contactos",
                 "L. Escuela: esfuerzo",
                 "M. Escuela: talento",
                 "N. Escuela: merecimiento")
colnames(M) <-c("(A)", "(B)","(C)", "(D)", "(E)", "(F)", "(G)", "(H)", "(I)", "(J)", "(K)", "(L)", "(M)", "(N)")
```

```{r}
corrplot::corrplot(M,
  method = "color", # Cambia los círculos por color completo de cada cuadrante
  addCoef.col = "#000390", # Color de los coeficientes
  type = "upper", # Deja solo las correlaciones de arriba
  tl.col = "black", # COlor letras, rojo por defecto
  na.label = "-")
```

# Redistribución


```{r results='asis'}
data<-data %>%
  mutate(across(where(is.labelled), as.numeric))

reg1.1<- lm(redistribucion~merit_esfuerzo_percep_ES,data=data)
reg1.2<- lm(redistribucion~merit_talento_percep_ES,data=data)
reg1.3<- lm(redistribucion~social_merito_percep_ES,data=data)
reg1<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2.1<- lm(redistribucion~merit_esfuerzo_pref_ES,data=data)
reg2.2<- lm(redistribucion~merit_talento_pref_ES,data=data)
reg2.3<- lm(redistribucion~social_merit_pref_ES,data=data)
reg2<- lm(redistribucion~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3.1<- lm(redistribucion~school_esfuerzo_ES,data=data)
reg3.2<- lm(redistribucion~school_talento_ES,data=data)
reg3.3<- lm(redistribucion~school_merito_ES,data=data)
reg3<- lm(redistribucion~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)

labs02 <- c("Intercepto",
            "Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
            "Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
            "Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")

knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
        #custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
        custom.coef.names = labs02)
```

## Puntajes factoriales

```{r}
data_cfa <- data %>% dplyr::select(redistribucion,
                                   merit_esfuerzo_percep_ES, merit_talento_percep_ES,
                                   padres_ricos_percep_ES, buenos_contactos_percep_ES,
                                   merit_esfuerzo_pref_ES, merit_talento_pref_ES,
                                   padres_ricos_pref_ES, buenos_contactos_pref_ES) %>% 
  na.omit()
# model
model_cfa <- '
  perc_merit = ~ merit_esfuerzo_percep_ES + merit_talento_percep_ES
  perc_nmerit = ~ padres_ricos_percep_ES + buenos_contactos_percep_ES
  pref_merit = ~ merit_esfuerzo_pref_ES + merit_talento_pref_ES
  pref_nmerit = ~ padres_ricos_pref_ES + buenos_contactos_pref_ES
  '


# estimation for each order set
m1_cfa <- cfa(model = model_cfa, 
              data = data_cfa,
              estimator = "MLR", 
              std.lv = F) # Continuous/ estimator ML Robust


summary(m1_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T) 

# Obtener los puntajes factoriales
puntajes_factoriales <- lavPredict(m1_cfa)
head(puntajes_factoriales)
data_cfa <- cbind(data_cfa, puntajes_factoriales)
```

```{r}
data_cfa <- data_cfa %>%
  na.omit() %>%
  mutate_all(~as.numeric(as_factor(.)))
```

```{r results='asis'}
reg1.1<- lm(redistribucion~perc_merit,data=data_cfa)
reg1.2<- lm(redistribucion~perc_nmerit,data=data_cfa)
reg1.3<- lm(redistribucion~pref_merit,data=data_cfa)
reg1.4<- lm(redistribucion~pref_nmerit,data=data_cfa)
reg1.5<- lm(redistribucion~perc_merit+perc_nmerit+pref_merit+pref_nmerit,data=data_cfa)

knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5))
```

# Percepción desigualdad

```{r results='asis'}
reg1.1<- lm(perc_des~merit_esfuerzo_percep_ES,data=data)
reg1.2<- lm(perc_des~merit_talento_percep_ES,data=data)
reg1.3<- lm(perc_des~social_merito_percep_ES,data=data)
reg1<- lm(perc_des~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2.1<- lm(perc_des~merit_esfuerzo_pref_ES,data=data)
reg2.2<- lm(perc_des~merit_talento_pref_ES,data=data)
reg2.3<- lm(perc_des~social_merit_pref_ES,data=data)
reg2<- lm(perc_des~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3.1<- lm(perc_des~school_esfuerzo_ES,data=data)
reg3.2<- lm(perc_des~school_talento_ES,data=data)
reg3.3<- lm(perc_des~school_merito_ES,data=data)
reg3<- lm(perc_des~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(perc_des~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)

labs02 <- c("Intercepto",
            "Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
            "Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
            "Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")

knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
        #custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
        custom.coef.names = labs02)
```

## Puntajes factoriales

```{r}
data_cfa <- data %>% dplyr::select(perc_des,
                                   merit_esfuerzo_percep_ES, merit_talento_percep_ES,
                                   padres_ricos_percep_ES, buenos_contactos_percep_ES,
                                   merit_esfuerzo_pref_ES, merit_talento_pref_ES,
                                   padres_ricos_pref_ES, buenos_contactos_pref_ES,
                                   school_esfuerzo_ES, school_talento_ES, school_merito_ES) %>% 
  na.omit()
# model
model_cfa <- '
  perc_merit = ~ merit_esfuerzo_percep_ES + merit_talento_percep_ES
  perc_nmerit = ~ padres_ricos_percep_ES + buenos_contactos_percep_ES
  pref_merit = ~ merit_esfuerzo_pref_ES + merit_talento_pref_ES
  pref_nmerit = ~ padres_ricos_pref_ES + buenos_contactos_pref_ES
  school_merit = ~ school_esfuerzo_ES + school_talento_ES + school_merito_ES
  '

# estimation for each order set
m1_cfa <- cfa(model = model_cfa, 
              data = data_cfa,
              estimator = "MLR", 
              std.lv = F) # Continuous/ estimator ML Robust


summary(m1_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T) 

# Obtener los puntajes factoriales
puntajes_factoriales <- lavPredict(m1_cfa)
head(puntajes_factoriales)
data_cfa <- cbind(data_cfa, puntajes_factoriales)
summary(data_cfa$perc_merit)
```

```{r}
data_cfa <- data_cfa %>%
  na.omit() %>%
  mutate_all(~as.numeric(as_factor(.)))
```

```{r results='asis'}
reg1.1<- lm(perc_des~perc_merit,data=data_cfa)
reg1.2<- lm(perc_des~perc_nmerit,data=data_cfa)
reg1.3<- lm(perc_des~pref_merit,data=data_cfa)
reg1.4<- lm(perc_des~pref_nmerit,data=data_cfa)
reg1.5<- lm(perc_des~school_merit,data=data_cfa)
reg1.6<- lm(perc_des~perc_merit+perc_nmerit+pref_merit+pref_nmerit+school_merit,data=data_cfa)

knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5,reg1.6), digits=3)
```

# Market justice preferences

```{r results='asis'}
data <- data %>% rowwise() %>% 
  mutate(market_justice=mean(c(just_salud, just_educ, just_pensiones), na.rm = TRUE))
summary(data$market_justice)

reg1.1<- lm(market_justice~merit_esfuerzo_percep_ES,data=data)
reg1.2<- lm(market_justice~merit_talento_percep_ES,data=data)
reg1.3<- lm(market_justice~social_merito_percep_ES,data=data)
reg1<- lm(market_justice~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2.1<- lm(market_justice~merit_esfuerzo_pref_ES,data=data)
reg2.2<- lm(market_justice~merit_talento_pref_ES,data=data)
reg2.3<- lm(market_justice~social_merit_pref_ES,data=data)
reg2<- lm(market_justice~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3.1<- lm(market_justice~school_esfuerzo_ES,data=data)
reg3.2<- lm(market_justice~school_talento_ES,data=data)
reg3.3<- lm(market_justice~school_merito_ES,data=data)
reg3<- lm(market_justice~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(market_justice~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)

labs02 <- c("Intercepto",
            "Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
            "Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
            "Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")

knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
        #custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
        custom.coef.names = labs02)
```

## Puntajes factoriales

```{r}
data_cfa <- data %>% dplyr::select(market_justice,
                                   merit_esfuerzo_percep_ES, merit_talento_percep_ES,
                                   padres_ricos_percep_ES, buenos_contactos_percep_ES,
                                   merit_esfuerzo_pref_ES, merit_talento_pref_ES,
                                   padres_ricos_pref_ES, buenos_contactos_pref_ES,
                                   school_esfuerzo_ES, school_talento_ES, school_merito_ES) %>% 
  na.omit()
# model
model_cfa <- '
  perc_merit = ~ merit_esfuerzo_percep_ES + merit_talento_percep_ES
  perc_nmerit = ~ padres_ricos_percep_ES + buenos_contactos_percep_ES
  pref_merit = ~ merit_esfuerzo_pref_ES + merit_talento_pref_ES
  pref_nmerit = ~ padres_ricos_pref_ES + buenos_contactos_pref_ES
  school_merit = ~ school_esfuerzo_ES + school_talento_ES + school_merito_ES
  '

# estimation for each order set
m1_cfa <- cfa(model = model_cfa, 
              data = data_cfa,
              estimator = "MLR", 
              std.lv = F) # Continuous/ estimator ML Robust


summary(m1_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T) 

# Obtener los puntajes factoriales
puntajes_factoriales <- lavPredict(m1_cfa)
head(puntajes_factoriales)
data_cfa <- cbind(data_cfa, puntajes_factoriales)
summary(data_cfa$perc_merit)
```

```{r}
data_cfa <- data_cfa %>%
  na.omit() %>%
  mutate_all(~as.numeric(as_factor(.)))
```

```{r results='asis'}
reg1.1<- lm(market_justice~perc_merit,data=data_cfa)
reg1.2<- lm(market_justice~perc_nmerit,data=data_cfa)
reg1.3<- lm(market_justice~pref_merit,data=data_cfa)
reg1.4<- lm(market_justice~pref_nmerit,data=data_cfa)
reg1.5<- lm(market_justice~school_merit,data=data_cfa)
reg1.6<- lm(market_justice~perc_merit+perc_nmerit+pref_merit+pref_nmerit+school_merit,data=data_cfa)

knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5,reg1.6), digits=3)
```