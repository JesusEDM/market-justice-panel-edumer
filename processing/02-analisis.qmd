---
title: "Data analysis"
subtitle: "Changes in Beliefs about Meritocracy and Preferences for Market Justice in the Chilean School Context"
author: EDUMER Team
date: today
lang: en
fontsize: 12pt
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 2
    toc-expand: 2
    toc-title: Contents
    number-sections: true
    number-depth: 3
    theme:
      - cosmo
      - "edumer.scss"
    code-link: true
    title-block-banner: true
  pdf:
    number-sections: true
    number-depth: 3
editor_options: 
  chunk_output_type: console
---

# Presentation

This is the data analysis code for the paper "Changes in Beliefs about Meritocracy and Preferences for Market Justice in the Chilean School Context". The prepared data is `edumer_students_long.RData`.

```{r}
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan, haven, lme4)
```

```{r}
load(here::here("input/data/proc/data.RData"))
```

# Correlaciones

```{r}
corr <- data %>% select(redistribucion,
                        perc_esfuerzo_soc, perc_talento_soc, perc_merit_soc,
                        perc_padres_ricos, perc_contactos,
                        pref_esfuerzo_soc, pref_talento_soc,
                        pref_padres_ricos, pref_contactos,
                        perc_esfuerzo_esc, perc_talento_esc, perc_merit_esc)
```

```{r}
M <- cor(corr, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Redistribución",
                 "B. Percepción: esfuerzo",
                 "C. Percepción: talento",
                 "D. Percepción: merecimiento",
                 "E. Percepción: padres ricos",
                 "F. Percepción: buenos contactos",
                 "G. Preferencia: esfuerzo",
                 "H. Preferencia: talento",
                 "I. Preferencia: padres ricos",
                 "J. Preferencia: buenos contactos",
                 "J. Escuela: esfuerzo",
                 "L. Escuela: talento",
                 "M. Escuela: merecimiento")
colnames(M) <-c("(A)", "(B)","(C)", "(D)", "(E)", "(F)", "(G)", "(H)", "(I)", "(J)", "(K)", "(L)", "(M)")
```

```{r}
corrplot::corrplot(M,
  method = "color", # Cambia los círculos por color completo de cada cuadrante
  addCoef.col = "#000390", # Color de los coeficientes
  type = "upper", # Deja solo las correlaciones de arriba
  tl.col = "black", # COlor letras, rojo por defecto
  na.label = "-")
```

```{r}
data$curso_estudiante <- car::recode(data$curso_estudiante, recodes = c("'6a'='Basica';
                                                                        '6b'='Basica';
                                                                        '6c'='Basica';
                                                                        '7a'='Basica';
                                                                        '7b'='Basica';
                                                                        '1a'='Media';
                                                                        '1b'='Media';
                                                                        '1c'='Media';
                                                                        '2a'='Media';
                                                                        '2b'='Media';
                                                                        '2c'='Media'"))

data <- data  %>% group_by(id_estudiante) %>%
  mutate(curso_estudiante_rec = ifelse(ola == 2 & is.na(curso_estudiante),
                                   curso_estudiante[ola == 1],
                                   curso_estudiante)) %>% ungroup()

table(data$curso_estudiante_rec)
```


# Redistribución


```{r results='asis'}
data<-data %>%
  mutate(across(where(is.labelled), as.numeric))

reg0 <- lm(redistribucion~ola, data=data)
reg1.1<- lm(redistribucion~perc_esfuerzo_soc,data=data)
reg1.2<- lm(redistribucion~perc_talento_soc,data=data)
reg1.3<- lm(redistribucion~perc_merit_soc,data=data)
reg1<- lm(redistribucion~perc_esfuerzo_soc+perc_talento_soc+perc_merit_soc,data=data)
reg2.1<- lm(redistribucion~pref_esfuerzo_soc,data=data)
reg2.2<- lm(redistribucion~pref_talento_soc,data=data)
reg2<- lm(redistribucion~pref_esfuerzo_soc+pref_talento_soc, data=data)
reg3.1<- lm(redistribucion~perc_esfuerzo_esc,data=data)
reg3.2<- lm(redistribucion~perc_talento_esc,data=data)
reg3.3<- lm(redistribucion~perc_merit_esc,data=data)
reg3<- lm(redistribucion~perc_esfuerzo_esc+perc_talento_esc+perc_merit_esc,data=data)
reg4<- lm(redistribucion~ola+perc_esfuerzo_soc+perc_talento_soc+perc_merit_soc+pref_esfuerzo_soc+pref_talento_soc+perc_esfuerzo_esc+perc_talento_esc+perc_merit_esc,data=data)

labs02 <- c("Intercepto",
            "Ola",
            "Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
            "Preferencia: esfuerzo", "Preferencia: talento",
            "Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")

knitreg(list(reg0,reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
        #custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
        custom.coef.names = labs02)
```

## Puntajes factoriales

```{r}
data_cfa <- data %>% dplyr::select(redistribucion,
                                   perc_esfuerzo_soc, perc_talento_soc,
                                   perc_padres_ricos, perc_contactos,
                                   pref_esfuerzo_soc, pref_talento_soc,
                                   pref_padres_ricos, pref_contactos) %>% 
  na.omit()
# model
model_cfa <- '
  perc_merit = ~ perc_esfuerzo_soc + perc_talento_soc
  perc_nmerit = ~ perc_padres_ricos + perc_contactos
  pref_merit = ~ pref_esfuerzo_soc + pref_talento_soc
  pref_nmerit = ~ pref_padres_ricos + pref_contactos
  '


# estimation for each order set
m1_cfa <- cfa(model = model_cfa, 
              data = data_cfa,
              estimator = "MLR", 
              std.lv = F) # Continuous/ estimator ML Robust


summary(m1_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T) 

# Obtener los puntajes factoriales
puntajes_factoriales <- lavPredict(m1_cfa)
head(puntajes_factoriales)
data_cfa <- cbind(data_cfa, puntajes_factoriales)
```

```{r}
data_cfa <- data_cfa %>%
  na.omit() %>%
  mutate_all(~as.numeric(as_factor(.)))
```

```{r results='asis'}
reg1.1<- lm(redistribucion~perc_merit,data=data_cfa)
reg1.2<- lm(redistribucion~perc_nmerit,data=data_cfa)
reg1.3<- lm(redistribucion~pref_merit,data=data_cfa)
reg1.4<- lm(redistribucion~pref_nmerit,data=data_cfa)
reg1.5<- lm(redistribucion~perc_merit+perc_nmerit+pref_merit+pref_nmerit,data=data_cfa)

knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5))
```

# Percepción desigualdad

```{r}
data %>% dplyr::select(perc_esfuerzo_soc, perc_talento_soc, perc_merit_soc,
                       perc_padres_ricos, perc_contactos) %>%  
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")
```

```{r}
data %>% dplyr::select(pref_esfuerzo_soc, pref_talento_soc,
                       pref_padres_ricos, pref_contactos) %>%  
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")
```

```{r}
data %>% dplyr::select(perc_esfuerzo_esc, perc_talento_esc, perc_merit_esc) %>%  
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")
```


```{r results='asis'}
reg0 <- lmer(perc_des~ola+curso_estudiante_rec+(1|id_estudiante), data=data)
reg1.1<- lmer(perc_des~perc_esfuerzo_soc+(1|id_estudiante),data=data)
reg1.2<- lmer(perc_des~perc_talento_soc+(1|id_estudiante),data=data)
reg1.3<- lmer(perc_des~perc_merit_soc+(1|id_estudiante),data=data)
reg1.4<- lmer(perc_des~perc_padres_ricos+(1|id_estudiante),data=data)
reg1.5<- lmer(perc_des~perc_contactos+(1|id_estudiante),data=data)
reg1<- lmer(perc_des~perc_esfuerzo_soc+perc_talento_soc+perc_merit_soc+perc_padres_ricos+perc_contactos+(1|id_estudiante),data=data)
reg2.1<- lmer(perc_des~pref_esfuerzo_soc+(1|id_estudiante),data=data)
reg2.2<- lmer(perc_des~pref_talento_soc+(1|id_estudiante),data=data)
reg2.3<- lmer(perc_des~pref_padres_ricos+(1|id_estudiante),data=data)
reg2.4<- lmer(perc_des~pref_contactos+(1|id_estudiante),data=data)
reg2<- lmer(perc_des~pref_esfuerzo_soc+pref_talento_soc+pref_padres_ricos+pref_contactos+(1|id_estudiante),data=data)
reg3.1<- lmer(perc_des~perc_esfuerzo_esc+(1|id_estudiante),data=data)
reg3.2<- lmer(perc_des~perc_talento_esc+(1|id_estudiante),data=data)
reg3.3<- lmer(perc_des~perc_merit_esc+(1|id_estudiante),data=data)
reg3<- lmer(perc_des~perc_esfuerzo_esc+perc_talento_esc+perc_merit_esc+(1|id_estudiante),data=data)
reg4<- lmer(perc_des~ola+curso_estudiante_rec+perc_esfuerzo_soc+perc_talento_soc+perc_merit_soc+perc_padres_ricos+perc_contactos+pref_esfuerzo_soc+pref_talento_soc+pref_padres_ricos+pref_contactos+perc_esfuerzo_esc+perc_talento_esc+perc_merit_esc+(1|id_estudiante),data=data)

labs02 <- c("Intercepto",
            "Ola",
            "Media",
            "Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento", "Percepción: Padres ricos", "Percepción: buenos contactos",
            "Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: Padres ricos", "Preferencia: buenos contactos",
            "Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")

knitreg(list(reg0,reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
        #custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
        custom.coef.names = labs02)
```

```{r}
sjPlot::plot_model(reg4,
                   show.values = TRUE,#mostrar valor de efectos
            dot.size = 1.3, #tamaño circulos
            line.size = 1, #tamaño CI
            value.size = 3.5, #tamaño valor efectoss
            value.offset = 0.35,
            spacing = .7, #espacio entre efectos)
            axis.labels = rev(c("Ola", "Media",
            "Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento", "Percepción: Padres ricos", "Percepción: buenos contactos",
            "Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: Padres ricos", "Preferencia: buenos contactos",
            "Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento"))
)

```

## Puntajes factoriales

```{r}
data_cfa <- data %>% dplyr::select(perc_des,
                                   perc_esfuerzo_soc, perc_talento_soc,
                                   perc_padres_ricos, perc_contactos,
                                   pref_esfuerzo_soc, pref_talento_soc,
                                   pref_padres_ricos, pref_contactos,
                                   perc_esfuerzo_esc, perc_talento_esc, perc_merit_esc) %>% 
  na.omit()
# model
model_cfa <- '
  perc_merit = ~ perc_esfuerzo_soc + perc_talento_soc
  perc_nmerit = ~ perc_padres_ricos + perc_contactos
  pref_merit = ~ pref_esfuerzo_soc + pref_talento_soc
  pref_nmerit = ~ pref_padres_ricos + pref_contactos
  school_merit = ~ perc_esfuerzo_esc + perc_talento_esc + perc_merit_esc
  '

# estimation for each order set
m1_cfa <- cfa(model = model_cfa, 
              data = data_cfa,
              estimator = "MLR", 
              std.lv = F) # Continuous/ estimator ML Robust


summary(m1_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T) 

# Obtener los puntajes factoriales
puntajes_factoriales <- lavPredict(m1_cfa)
head(puntajes_factoriales)
data_cfa <- cbind(data_cfa, puntajes_factoriales)
summary(data_cfa$perc_merit)
```

```{r}
data_cfa <- data_cfa %>%
  na.omit() %>%
  mutate_all(~as.numeric(as_factor(.)))
```

```{r results='asis'}
reg1.1<- lm(perc_des~perc_merit,data=data_cfa)
reg1.2<- lm(perc_des~perc_nmerit,data=data_cfa)
reg1.3<- lm(perc_des~pref_merit,data=data_cfa)
reg1.4<- lm(perc_des~pref_nmerit,data=data_cfa)
reg1.5<- lm(perc_des~school_merit,data=data_cfa)
reg1.6<- lm(perc_des~perc_merit+perc_nmerit+pref_merit+pref_nmerit+school_merit,data=data_cfa)

knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5,reg1.6), digits=3)
```

# Market justice preferences

```{r results='asis'}
data <- data %>% rowwise() %>% 
  mutate(market_justice=mean(c(just_salud, just_educ, just_pensiones), na.rm = TRUE))
summary(data$market_justice)

reg0 <- lm(market_justice~ola, data=data)
reg1.1<- lm(market_justice~perc_esfuerzo_soc,data=data)
reg1.2<- lm(market_justice~perc_talento_soc,data=data)
reg1.3<- lm(market_justice~perc_merit_soc,data=data)
reg1<- lm(market_justice~perc_esfuerzo_soc+perc_talento_soc+perc_merit_soc,data=data)
reg2.1<- lm(market_justice~pref_esfuerzo_soc,data=data)
reg2.2<- lm(market_justice~pref_talento_soc,data=data)
reg2<- lm(market_justice~pref_esfuerzo_soc+pref_talento_soc,data=data)
reg3.1<- lm(market_justice~perc_esfuerzo_esc,data=data)
reg3.2<- lm(market_justice~perc_talento_esc,data=data)
reg3.3<- lm(market_justice~perc_merit_esc,data=data)
reg3<- lm(market_justice~perc_esfuerzo_esc+perc_talento_esc+perc_merit_esc,data=data)
reg4<- lm(market_justice~ola+perc_esfuerzo_soc+perc_talento_soc+perc_merit_soc+pref_esfuerzo_soc+pref_talento_soc+perc_esfuerzo_esc+perc_talento_esc+perc_merit_esc,data=data)

labs02 <- c("Intercepto",
            "Ola",
            "Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
            "Preferencia: esfuerzo", "Preferencia: talento",
            "Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")

knitreg(list(reg0,reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
        #custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
        custom.coef.names = labs02)
```

## Puntajes factoriales

```{r}
data_cfa <- data %>% dplyr::select(market_justice,
                                   perc_esfuerzo_soc, perc_talento_soc,
                                   perc_padres_ricos, perc_contactos,
                                   pref_esfuerzo_soc, pref_talento_soc,
                                   pref_padres_ricos, pref_contactos,
                                   perc_esfuerzo_esc, perc_talento_esc, perc_merit_esc) %>% 
  na.omit()
# model
model_cfa <- '
  perc_merit = ~ perc_esfuerzo_soc + perc_talento_soc
  perc_nmerit = ~ perc_padres_ricos + perc_contactos
  pref_merit = ~ pref_esfuerzo_soc + pref_talento_soc
  pref_nmerit = ~ pref_padres_ricos + pref_contactos
  school_merit = ~ perc_esfuerzo_esc + perc_talento_esc + perc_merit_esc
  '

# estimation for each order set
m1_cfa <- cfa(model = model_cfa, 
              data = data_cfa,
              estimator = "MLR", 
              std.lv = F) # Continuous/ estimator ML Robust


summary(m1_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T) 

# Obtener los puntajes factoriales
puntajes_factoriales <- lavPredict(m1_cfa)
head(puntajes_factoriales)
data_cfa <- cbind(data_cfa, puntajes_factoriales)
summary(data_cfa$perc_merit)
```

```{r}
data_cfa <- data_cfa %>%
  na.omit() %>%
  mutate_all(~as.numeric(as_factor(.)))
```

```{r results='asis'}
reg1.1<- lm(market_justice~perc_merit,data=data_cfa)
reg1.2<- lm(market_justice~perc_nmerit,data=data_cfa)
reg1.3<- lm(market_justice~pref_merit,data=data_cfa)
reg1.4<- lm(market_justice~pref_nmerit,data=data_cfa)
reg1.5<- lm(market_justice~school_merit,data=data_cfa)
reg1.6<- lm(market_justice~perc_merit+perc_nmerit+pref_merit+pref_nmerit+school_merit,data=data_cfa)

knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5,reg1.6), digits=3)
```