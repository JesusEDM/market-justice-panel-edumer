---
title: "01-preparacion"
format: html
editor: source
bibliography: "../input/bib/merit-redis-school.bib"
---

```{r, data,echo=FALSE, include=FALSE}
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr)

rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
```

```{r}
load(url("https://github.com/educacion-meritocracia/edumer-data/raw/main/output/data/edumer_students_long.RData"))
```

```{r, preparacion, echo=FALSE, eval=TRUE}
#Base General con el cuestionario para estudiantes
#Codificamos los valores 99-88 como missing para todas las variables
edumer_students_long <- edumer_students_long %>% set_na(., na = c(99, 88))

for (i in names(dplyr::select(edumer_students_long, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
  edumer_students_long[[i]] <- sjlabelled::set_labels(
    x = edumer_students_long[[i]],
    labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")
  )
}


for (i in names(dplyr::select(edumer_students_long, tidyselect::starts_with("p10_")))) {
  edumer_students_long[[i]] <- sjlabelled::set_labels(
    x = edumer_students_long[[i]],
    labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
  )
}


for (i in names(dplyr::select(edumer_students_long, tidyselect::starts_with("p11_")))) {
  edumer_students_long[[i]] <- sjlabelled::set_labels(
    x = edumer_students_long[[i]],
    labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
  )
}

for (i in names(dplyr::select(edumer_students_long, tidyselect::starts_with("p12_")))) {
  edumer_students_long[[i]] <- sjlabelled::set_labels(
    x = edumer_students_long[[i]],
    labels = c("Si", "No")
  )
}

for (i in names(dplyr::select(edumer_students_long, tidyselect::starts_with("p13_")))) {
  edumer_students_long[[i]] <- sjlabelled::set_labels(
    x = edumer_students_long[[i]],
    labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
  )
}


for (i in names(dplyr::select(edumer_students_long, tidyselect::starts_with("p18_")))) {
  edumer_students_long[[i]] <- sjlabelled::set_labels(
    x = edumer_students_long[[i]],
    labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
  )
}
```

# Seleccion variables

```{r}
data <- edumer_students_long %>% select(id_estudiante,
                                        ola,
                                        "curso_estudiante"=d3_def,
                                        "experimento"=asignacion,
                                        "redistribucion"=p9_2,
                              "perc_des"=p9_1,
                              just_educ=p9_3,
                              just_salud=p9_4,
                              just_pensiones=p9_5,
                              "perc_esfuerzo_soc"=p1_1,
                              perc_talento_soc=p1_2,
                              perc_merit_soc=p1_10,
                              perc_oportunidades_soc=p1_9,
                              perc_padres_ricos=p1_3,
                              perc_contactos=p1_4,
                              pref_esfuerzo_soc=p1_5,
                              pref_talento_soc=p1_6,
                              pref_padres_ricos=p1_7,
                              pref_contactos=p1_8,
                              perc_esfuerzo_esc=p2_1,
                              perc_talento_esc=p2_2,
                              perc_merit_esc=p2_3,
                              genero_ES=p20,
                              #educ_max, 
                              libros_hogar=p30,
                              prom_notas=p4,
                              #nivel_educ,
                              perc_educ=p25,
                              educ_madre=p26,
                              educ_padre=p27)

```

```{r}
print(summarytools::dfSummary(data), method="render")
```

```{r}
save(data, file="../input/data/proc/data.RData")
```

