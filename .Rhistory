pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr)
load("input/data/proc/ola1.RData")
View(proc_datos)
table(proc_datos$p9_2)
data <- proc_datos %>% select(tidyselect::starts_with("merit"), tidyselect::starts_with("school"), tidyselect::starts_with("social"))
View(data)
data <- proc_datos %>% select(tidyselect::starts_with("merit"), tidyselect::starts_with("school"), tidyselect::starts_with("social"), p9_2="redistribucion")
data <- proc_datos %>% select(tidyselect::starts_with("merit"), tidyselect::starts_with("school"), tidyselect::starts_with("social"), "redistribucion"=p9_2)
data <- data %>% select(redistribucion,
merit_esfuerzo_percep_ES, merit_esfuerzo_pref_ES,
merit_talento_percep_ES, merit_talento_pref_ES,
social_merito_percep_ES, social_merit_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
summarytools::dfSummary(data)
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr)
load(here::here("input/data/proc/ola1.RData"))
#Base General con el cuestionario para estudiantes
#Codificamos los valores 99-88 como missing para todas las variables
proc_datos <- proc_datos %>% set_na(., na = c(99, 88))
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p10_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p11_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p12_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Si", "No")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p13_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p18_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
)
}
names(proc_datos)
View(proc_datos)
data <- proc_datos %>% select("redistribucion"=p9_2,
aleatorio, check_comprension,
curso_estudiante, genero_ES,
educ_max, libros_hogar,
tidyselect::starts_with("merit"),
tidyselect::starts_with("school"),
tidyselect::starts_with("social"))
data <- data %>% select(redistribucion,
aleatorio, check_comprension,
curso_estudiante, genero_ES,
educ_max, libros_hogar,
merit_esfuerzo_percep_ES, merit_esfuerzo_pref_ES,
merit_talento_percep_ES, merit_talento_pref_ES,
social_merito_percep_ES, social_merit_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
save(data, file="../input/data/proc/data.RData")
pacman::p_load(dplyr, cor, lme4, sjplot, ggplot2)
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr)
load("input/data/proc/data.RData")
corr <- data %>% select(redistribucion, merit_esfuerzo_percep_ES, merit_esfuerzo_pref_ES,
merit_talento_percep_ES, merit_talento_pref_ES,
social_merito_percep_ES, social_merit_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
M <- cor(corr, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
corr <- data %>% select(redistribucion,
merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES,
merit_esfuerzo_pref_ES, merit_talento_pref_ES, social_merit_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
M <- cor(corr, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Redistribución",
"B. Percepción: esfuerzo",
"C. Percepción: talento",
"D. Percepción: merecimiento",
"E. Preferencia: esfuerzo",
"F. Preferencia: talento",
"G. Preferencia: merecimiento",
"H. Escuela: esfuerzo",
"I. Escuela: talento",
"J. Escuela: merecimiento")
colnames(M) <-c("(A)", "(B)","(C)", "(D)", "(E)", "(F)", "(G)", "(H)", "(I)", "(J)")
corrplot::corrplot(M,
method = "color", # Cambia los círculos por color completo de cada cuadrante
addCoef.col = "#000390", # Color de los coeficientes
type = "upper", # Deja solo las correlaciones de arriba
tl.col = "black", # COlor letras, rojo por defecto
na.label = "-")
data <- na.omit(data)
names(data)
reg1<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2<- lm(redistribucion~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3<- lm(redistribucion~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
knitreg(list(reg1,reg2,reg3, reg4),
custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
View(data)
load(here::here("input/data/proc/data.RData"))
data <- na.omit(data)
reg1<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2<- lm(redistribucion~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3<- lm(redistribucion~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
knitreg(list(reg1,reg2,reg3, reg4),
custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr)
load(here::here("input/data/proc/data.RData"))
corr <- data %>% select(redistribucion,
merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES,
merit_esfuerzo_pref_ES, merit_talento_pref_ES, social_merit_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
M <- cor(corr, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Redistribución",
"B. Percepción: esfuerzo",
"C. Percepción: talento",
"D. Percepción: merecimiento",
"E. Preferencia: esfuerzo",
"F. Preferencia: talento",
"G. Preferencia: merecimiento",
"H. Escuela: esfuerzo",
"I. Escuela: talento",
"J. Escuela: merecimiento")
colnames(M) <-c("(A)", "(B)","(C)", "(D)", "(E)", "(F)", "(G)", "(H)", "(I)", "(J)")
corrplot::corrplot(M,
method = "color", # Cambia los círculos por color completo de cada cuadrante
addCoef.col = "#000390", # Color de los coeficientes
type = "upper", # Deja solo las correlaciones de arriba
tl.col = "black", # COlor letras, rojo por defecto
na.label = "-")
data <- na.omit(data)
reg1<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2<- lm(redistribucion~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3<- lm(redistribucion~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
knitreg(list(reg1,reg2,reg3, reg4),
custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr)
load(here::here("input/data/proc/data.RData"))
corr <- data %>% select(redistribucion,
merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES,
merit_esfuerzo_pref_ES, merit_talento_pref_ES, social_merit_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
M <- cor(corr, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Redistribución",
"B. Percepción: esfuerzo",
"C. Percepción: talento",
"D. Percepción: merecimiento",
"E. Preferencia: esfuerzo",
"F. Preferencia: talento",
"G. Preferencia: merecimiento",
"H. Escuela: esfuerzo",
"I. Escuela: talento",
"J. Escuela: merecimiento")
colnames(M) <-c("(A)", "(B)","(C)", "(D)", "(E)", "(F)", "(G)", "(H)", "(I)", "(J)")
corrplot::corrplot(M,
method = "color", # Cambia los círculos por color completo de cada cuadrante
addCoef.col = "#000390", # Color de los coeficientes
type = "upper", # Deja solo las correlaciones de arriba
tl.col = "black", # COlor letras, rojo por defecto
na.label = "-")
data <- na.omit(data)
reg1.1<- lm(redistribucion~merit_esfuerzo_percep_ES,data=data)
reg1.3<- lm(redistribucion~social_merito_percep_ES,data=data)
reg1.1<- lm(redistribucion~merit_esfuerzo_percep_ES,data=data)
reg1<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
View(data)
data <- data %>% na.omit()  %>% # Eliminar Na's
mutate_all(~(as.numeric(.)))
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr)
load(here::here("input/data/proc/data.RData"))
corr <- data %>% select(redistribucion,
merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES,
merit_esfuerzo_pref_ES, merit_talento_pref_ES, social_merit_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
M <- cor(corr, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Redistribución",
"B. Percepción: esfuerzo",
"C. Percepción: talento",
"D. Percepción: merecimiento",
"E. Preferencia: esfuerzo",
"F. Preferencia: talento",
"G. Preferencia: merecimiento",
"H. Escuela: esfuerzo",
"I. Escuela: talento",
"J. Escuela: merecimiento")
colnames(M) <-c("(A)", "(B)","(C)", "(D)", "(E)", "(F)", "(G)", "(H)", "(I)", "(J)")
corrplot::corrplot(M,
method = "color", # Cambia los círculos por color completo de cada cuadrante
addCoef.col = "#000390", # Color de los coeficientes
type = "upper", # Deja solo las correlaciones de arriba
tl.col = "black", # COlor letras, rojo por defecto
na.label = "-")
data <- data %>% na.omit()  %>% # Eliminar Na's
mutate_all(~(as.numeric(.)))
data <- data %>%
na.omit() %>%
mutate_all(~as.numeric(.))
data <- data %>%
na.omit() %>%
mutate_all(~as.numeric(as_factor(.)))
reg1.1<- lm(redistribucion~merit_esfuerzo_percep_ES,data=data)
reg1.2<- lm(redistribucion~merit_talento_percep_ES,data=data)
reg1.3<- lm(redistribucion~social_merito_percep_ES,data=data)
reg1<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2.1<- lm(redistribucion~merit_esfuerzo_pref_ES,data=data)
reg2.2<- lm(redistribucion~merit_talento_pref_ES,data=data)
reg2.3<- lm(redistribucion~social_merit_pref_ES,data=data)
reg2<- lm(redistribucion~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3.1<- lm(redistribucion~school_esfuerzo_ES,data=data)
reg3.2<- lm(redistribucion~school_talento_ES,data=data)
reg3.3<- lm(redistribucion~school_merito_ES,data=data)
reg3<- lm(redistribucion~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
htmlreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
#custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr)
load(here::here("input/data/proc/ola1.RData"))
View(proc_datos)
#Base General con el cuestionario para estudiantes
#Codificamos los valores 99-88 como missing para todas las variables
proc_datos <- proc_datos %>% set_na(., na = c(99, 88))
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p10_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p11_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p12_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Si", "No")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p13_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p18_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
)
}
names(proc_datos)
View(proc_datos)
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan)
load(here::here("input/data/proc/data.RData"))
corr <- data %>% select(redistribucion, perc_des,
merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES,
padres_ricos_percep_ES, buenos_contactos_percep_ES,
merit_esfuerzo_pref_ES, merit_talento_pref_ES, social_merit_pref_ES,
padres_ricos_pref_ES, buenos_contactos_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
reg1.1<- lm(perc_des~merit_esfuerzo_percep_ES,data=data)
reg1.2<- lm(perc_des~merit_talento_percep_ES,data=data)
reg1.3<- lm(perc_des~social_merito_percep_ES,data=data)
reg1<- lm(perc_des~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2.1<- lm(perc_des~merit_esfuerzo_pref_ES,data=data)
reg2.2<- lm(perc_des~merit_talento_pref_ES,data=data)
reg2.3<- lm(perc_des~social_merit_pref_ES,data=data)
reg2<- lm(perc_des~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3.1<- lm(perc_des~school_esfuerzo_ES,data=data)
reg3.2<- lm(perc_des~school_talento_ES,data=data)
reg3.3<- lm(perc_des~school_merito_ES,data=data)
reg3<- lm(perc_des~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(perc_des~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
#custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2),
#custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2),
#custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2))
knitreg(list(reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4))
corr <- data %>% select(redistribucion,
merit_esfuerzo_percep_ES, merit_talento_percep_ES, social_merito_percep_ES,
padres_ricos_percep_ES, buenos_contactos_percep_ES,
merit_esfuerzo_pref_ES, merit_talento_pref_ES, social_merit_pref_ES,
padres_ricos_pref_ES, buenos_contactos_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan, haven)
load(here::here("input/data/proc/data.RData"))
data<-data %>%
mutate(across(where(is.labelled), as.numeric))
reg1.1<- lm(redistribucion~merit_esfuerzo_percep_ES,data=data)
reg1.2<- lm(redistribucion~merit_talento_percep_ES,data=data)
reg1.3<- lm(redistribucion~social_merito_percep_ES,data=data)
reg1<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2.1<- lm(redistribucion~merit_esfuerzo_pref_ES,data=data)
reg2.2<- lm(redistribucion~merit_talento_pref_ES,data=data)
reg2.3<- lm(redistribucion~social_merit_pref_ES,data=data)
reg2<- lm(redistribucion~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3.1<- lm(redistribucion~school_esfuerzo_ES,data=data)
reg3.2<- lm(redistribucion~school_talento_ES,data=data)
reg3.3<- lm(redistribucion~school_merito_ES,data=data)
reg3<- lm(redistribucion~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(redistribucion~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
#custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
reg1.1<- lm(perc_des~merit_esfuerzo_percep_ES,data=data)
reg1.2<- lm(perc_des~merit_talento_percep_ES,data=data)
reg1.3<- lm(perc_des~social_merito_percep_ES,data=data)
reg1<- lm(perc_des~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES,data=data)
reg2.1<- lm(perc_des~merit_esfuerzo_pref_ES,data=data)
reg2.2<- lm(perc_des~merit_talento_pref_ES,data=data)
reg2.3<- lm(perc_des~social_merit_pref_ES,data=data)
reg2<- lm(perc_des~merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES,data=data)
reg3.1<- lm(perc_des~school_esfuerzo_ES,data=data)
reg3.2<- lm(perc_des~school_talento_ES,data=data)
reg3.3<- lm(perc_des~school_merito_ES,data=data)
reg3<- lm(perc_des~school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
reg4<- lm(perc_des~merit_esfuerzo_percep_ES+merit_talento_percep_ES+social_merito_percep_ES+merit_esfuerzo_pref_ES+merit_talento_pref_ES+social_merit_pref_ES+school_esfuerzo_ES+school_talento_ES+school_merito_ES,data=data)
labs02 <- c("Intercepto",
"Percepción: esfuerzo", "Percepción: talento", "Percepción: merecimiento",
"Preferencia: esfuerzo", "Preferencia: talento", "Preferencia: merecimiento",
"Escuela: esfuerzo", "Escuela: talento", "Escuela: merecimiento")
knitreg(list(reg1.1,reg1.2,reg1.3,reg1,reg2.1,reg2.2,reg2.3,reg2,reg3.1,reg3.2,reg3.3,reg3, reg4),
#custom.model.names = c("Modelo 1","Modelo 2","Modelo 3", "Modelo 4"),
custom.coef.names = labs02)
data_cfa <- data %>% dplyr::select(perc_des,
merit_esfuerzo_percep_ES, merit_talento_percep_ES,
padres_ricos_percep_ES, buenos_contactos_percep_ES,
merit_esfuerzo_pref_ES, merit_talento_pref_ES,
padres_ricos_pref_ES, buenos_contactos_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES) %>%
na.omit()
# model
model_cfa <- '
perc_merit = ~ merit_esfuerzo_percep_ES + merit_talento_percep_ES
perc_nmerit = ~ padres_ricos_percep_ES + buenos_contactos_percep_ES
pref_merit = ~ merit_esfuerzo_pref_ES + merit_talento_pref_ES
pref_nmerit = ~ padres_ricos_pref_ES + buenos_contactos_pref_ES
school_merit = ~ school_esfuerzo_ES + school_talento_ES + school_merito_ES
'
# estimation for each order set
m1_cfa <- cfa(model = model_cfa,
data = data_cfa,
estimator = "MLR",
std.lv = F) # Continuous/ estimator ML Robust
summary(m1_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T)
# Obtener los puntajes factoriales
puntajes_factoriales <- lavPredict(m1_cfa)
head(puntajes_factoriales)
data_cfa <- cbind(data_cfa, puntajes_factoriales)
summary(data_cfa$perc_merit)
data_cfa <- data_cfa %>%
na.omit() %>%
mutate_all(~as.numeric(as_factor(.)))
knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5,reg1.6), digits=3)
reg1.1<- lm(perc_des~perc_merit,data=data_cfa)
reg1.2<- lm(perc_des~perc_nmerit,data=data_cfa)
reg1.3<- lm(perc_des~pref_merit,data=data_cfa)
reg1.4<- lm(perc_des~pref_nmerit,data=data_cfa)
reg1.5<- lm(perc_des~school_merit,data=data_cfa)
reg1.6<- lm(perc_des~perc_merit+perc_nmerit+pref_merit+pref_nmerit+school_merit,data=data_cfa)
knitreg(list(reg1.1, reg1.2, reg1.3, reg1.4, reg1.5,reg1.6), digits=3)
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr)
load(here::here("input/data/proc/ola1.RData"))
#Base General con el cuestionario para estudiantes
#Codificamos los valores 99-88 como missing para todas las variables
proc_datos <- proc_datos %>% set_na(., na = c(99, 88))
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p10_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p11_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p12_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Si", "No")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p13_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
)
}
for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p18_")))) {
proc_datos[[i]] <- sjlabelled::set_labels(
x = proc_datos[[i]],
labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
)
}
View(proc_datos)
data <- proc_datos %>% select("redistribucion"=p9_2,
"perc_des"=p9_1,
just_educ, just_salud, just_pensiones,
aleatorio, check_comprension,
curso_estudiante, genero_ES,
educ_max, libros_hogar,
tidyselect::starts_with("merit"),
tidyselect::starts_with("school"),
tidyselect::starts_with("social"),
tidyselect::starts_with("padres"),
tidyselect::starts_with("buenos"))
data <- data %>% select(redistribucion, perc_des,
just_educ, just_salud, just_pensiones,
aleatorio, check_comprension,
curso_estudiante, genero_ES,
educ_max, libros_hogar,
merit_esfuerzo_percep_ES, merit_esfuerzo_pref_ES,
merit_talento_percep_ES, merit_talento_pref_ES,
social_merito_percep_ES, social_merit_pref_ES,
padres_ricos_percep_ES, padres_ricos_pref_ES,
buenos_contactos_percep_ES, buenos_contactos_pref_ES,
school_esfuerzo_ES, school_talento_ES, school_merito_ES)
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan, haven)
load(here::here("input/data/proc/data.RData"))
data <- data %>% mutate(market_justice=mean(just_salud, just_educ, just_pensiones, na.rm = TRUE))
summary(data$market_justice)
data <- data %>% rowwise() %>%
mutate(market_justice=mean(just_salud, just_educ, just_pensiones, na.rm = TRUE))
summary(data$market_justice)
data <- data %>% rowwise() %>%
mutate(market_justice=mean(c(just_salud, just_educ, just_pensiones), na.rm = TRUE))
summary(data$market_justice)
